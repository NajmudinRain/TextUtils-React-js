{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newtext","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","About","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oMAKe,SAASA,EAAOC,GAC3B,OACH,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACC,sBAAKD,UAAU,kBAAf,UAEE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SAEE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAON,sBAAKF,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAA3E,UACF,uBAAOD,UAAU,mBAAmBM,QAASP,EAAMQ,WAAYH,KAAK,WAAWI,KAAK,SAASH,GAAG,2BAChG,uBAAOL,UAAU,oBAAoBS,QAAQ,yBAA7C,wCCxBa,SAASC,EAASX,GAC7B,MAAuBY,mBAAS,IAAhC,mBAAOC,EAAP,KAAaC,EAAb,KAwCA,OACI,qCACA,sBAAKb,UAAU,YAAYc,MAAO,CAACC,MAAmB,SAAbhB,EAAME,KAAc,QAAQ,WAArE,UACI,6BAAKF,EAAMiB,UACX,qBAAKhB,UAAU,OAAf,SACH,0BAAUA,UAAU,eAAeiB,MAAOL,EAAMM,SAV/B,SAACC,GAEnBN,EAAQM,EAAMC,OAAOH,QAQsDH,MAAQ,CAACO,gBAA6B,SAAbtB,EAAME,KAAc,OAAO,QAASc,MAAoB,SAAbhB,EAAME,KAAc,QAAQ,WAAYI,GAAG,QAAQiB,KAAK,QAEnM,wBAAQtB,UAAU,uBAAuBc,MAAO,CAACO,gBAA6B,SAAbtB,EAAME,KAAc,UAAU,QAAQc,MAAmB,SAAbhB,EAAME,KAAc,QAAQ,WAAYK,QA5CxI,WAEjB,IAAKiB,EAASX,EAAKY,cACnBX,EAAQU,GACRxB,EAAM0B,UAAU,yBAAyB,YAwCrC,kCACA,wBAAQzB,UAAU,uBAAwBc,MAAO,CAACO,gBAA6B,SAAbtB,EAAME,KAAc,UAAU,QAAQc,MAAmB,SAAbhB,EAAME,KAAc,QAAQ,WAAYK,QArCzI,WACjB,IAAKiB,EAASX,EAAKc,cACnBb,EAAQU,GACRxB,EAAM0B,UAAU,0BAA0B,YAkCtC,kCACA,wBAAQzB,UAAU,uBAAuBc,MAAO,CAACO,gBAA6B,SAAbtB,EAAME,KAAc,UAAU,QAAQc,MAAmB,SAAbhB,EAAME,KAAc,QAAQ,WAAYK,QAhC5I,WAEbO,EADc,IAEdd,EAAM0B,UAAU,eAAe,YA6B3B,uBACA,wBAAQzB,UAAU,uBAAsBc,MAAO,CAACO,gBAA6B,SAAbtB,EAAME,KAAc,UAAU,QAAQc,MAAmB,SAAbhB,EAAME,KAAc,QAAQ,WAAYK,QA3B3I,WACbqB,QAAQC,IAAI,aACZ,IAAIhB,EAAMiB,SAASC,eAAe,SAClClB,EAAKmB,SACLC,UAAUC,UAAUC,UAAUtB,EAAKK,OACnClB,EAAM0B,UAAU,sBAAsB,YAsBlC,uBACA,wBAAQzB,UAAU,uBAAuBc,MAAO,CAACO,gBAA6B,SAAbtB,EAAME,KAAc,UAAU,QAAQc,MAAmB,SAAbhB,EAAME,KAAc,QAAQ,WAAYK,QArBrI,WACpB,IAAIiB,EAASX,EAAKuB,MAAM,QACxBtB,EAAQU,EAAQa,KAAK,MACrBrC,EAAM0B,UAAU,uBAAuB,YAkBnC,oCAGJ,sBAAKzB,UAAU,iBAAiBc,MAAO,CAACC,MAAmB,SAAbhB,EAAME,KAAc,QAAQ,WAA1E,UACI,mDACA,8BAAIW,EAAKuB,MAAM,KAAKE,OAApB,cAAuCzB,EAAKyB,OAA5C,iBACA,8BAAI,KAAOzB,EAAKuB,MAAM,KAAKE,OAA3B,qBACA,yCACC,4BAAIzB,EAAKyB,OAAO,EAAEzB,EAAK,8CC7DrB,SAAS0B,EAAMvC,GAQ1B,OAEKA,EAAMwC,OAAS,sBAAKvC,UAAS,sBAAiBD,EAAMwC,MAAMnC,KAA7B,gCAAiEI,KAAK,QAApF,UACZ,iCATQ,SAACgC,GACb,IAAMC,EAAOD,EAAKd,cAClB,OAAOe,EAAMC,OAAO,GAAGlB,cAAciB,EAAME,MAAM,GAOpCC,CAAW7C,EAAMwC,MAAMnC,QADpB,KACsCL,EAAMwC,MAAMM,OF0B1E/C,EAAOgD,aAAa,CACpB3C,MAAM,iBACN4C,MAAM,YGmCSC,MA7Df,WAEE,MAAwBrC,mBAAS,SAAjC,mBAAOV,EAAP,KAAagD,EAAb,KAEA,EAA0BtC,mBAAS,MAAnC,mBAAO4B,EAAP,KAAcW,EAAd,KACIzB,EAAU,SAAC0B,EAAS/C,GACpB8C,EAAS,CACPL,IAAIM,EACJ/C,KAAKA,IAEPgD,YAAW,WACTF,EAAS,QACR,OAwBP,OACF,qCAKA,cAACpD,EAAD,CAAQK,MAAM,YAAYF,KAAMA,EAAMM,WA3BnB,WACL,UAAPN,GACHgD,EAAQ,QACRpB,SAASwB,KAAKvC,MAAMO,gBAAiB,UACrCI,EAAU,6BAA8B,WACxCI,SAAS1B,MAAM,wBASf8C,EAAQ,SACRpB,SAASwB,KAAKvC,MAAMO,gBAAiB,QACrCI,EAAU,8BAA+B,WACzCI,SAAS1B,MAAM,2BAWnB,cAACmC,EAAD,CAAOC,MAAOA,IACd,qBAAKvC,UAAU,iBAAf,SAQU,cAACU,EAAD,CAAUe,UAAWA,EAAWT,QAAQ,4BAA4Bf,KAAMA,UCvDrEqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASC,eAAe,SAM1BwB,K","file":"static/js/main.1577c5cb.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.About}</Link>\r\n          \r\n        </li> */}\r\n      </ul>\r\n    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        \r\n    )\r\n}\r\nNavbar.propTypes={\r\n        title: PropTypes.string.isRequired,\r\n        About: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps={\r\ntitle:\"set title here\",\r\nAbout:\"About Us\"\r\n\r\n\r\n}","import React,{useState} from 'react'  //usestate is a hook helps us to create state.\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText]= useState(\"\");\r\n    //text=\"new text\" //worng way to change the state\r\n    //setText(\"new text\");//corrrect way to change the state.\r\n    const handleUpClick= ()=>{\r\n        // console.log(\"UpperCase was clicked\"+text);\r\n        let  newtext= text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert(\"converted to Uppercase\",\"success\")\r\n\r\n    }\r\n    \r\n    const handleLoClick= ()=>{\r\n        let  newtext= text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert(\"converted to lower case\",\"success\")\r\n\r\n    }\r\n    const ClearText= ()=>{\r\n        let  newtext= \"\";\r\n        setText(newtext);\r\n        props.showAlert(\"Text cleared\",\"success\")\r\n\r\n    }\r\n    const handleCopy=()=>{\r\n        console.log(\"I am copy\")\r\n        var text= document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"copied to clipboard\",\"success\")\r\n    }\r\n    const handleExtraSpaces=()=>{\r\n        let newtext= text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"))\r\n        props.showAlert(\"extra spaces removed\",\"success\")\r\n    }\r\n    const handleOnChange= (event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value)\r\n\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode===\"dark\"?'white':\"#11114e\"}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n         <textarea className=\"form-control\" value={text} onChange={handleOnChange} style= {{backgroundColor:props.mode==='dark'?'grey':'white', color: props.mode===\"dark\"?'white':\"#04044b\"}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" style={{backgroundColor:props.mode==='dark'?'#04044b':'white',color:props.mode===\"dark\"?'white':\"#04044b\"}} onClick={handleUpClick}>Convert To UpperCase</button>\r\n            <button className=\"btn btn-primary mx-1\"  style={{backgroundColor:props.mode==='dark'?'#04044b':'white',color:props.mode===\"dark\"?'white':\"#04044b\"}} onClick={handleLoClick}>Convert To LowerCase</button>\r\n            <button className=\"btn btn-primary mx-1\" style={{backgroundColor:props.mode==='dark'?'#04044b':'white',color:props.mode===\"dark\"?'white':\"#04044b\"}} onClick={ClearText}>ClearText</button>\r\n            <button className=\"btn btn-primary mx-1\"style={{backgroundColor:props.mode==='dark'?'#04044b':'white',color:props.mode===\"dark\"?'white':\"#04044b\"}} onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1\" style={{backgroundColor:props.mode==='dark'?'#04044b':'white',color:props.mode===\"dark\"?'white':\"#04044b\"}} onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode===\"dark\"?'white':\"#11114e\"}}>\r\n            <h1>your text summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008* text.split(\" \").length}minutes to read</p>\r\n            <h2>preview</h2>\r\n             <p>{text.length>0?text:\"enter text in box to review it here\"}</p>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n   const capitalize=(word)=>{\r\n        const lower= word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n\r\n   }\r\n\r\n    return (\r\n     \r\n         props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        \r\n        </div> \r\n    )\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport React, { useState } from 'react';\nimport Alert from \"./components/Alert\";\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light'); //whether dark mode is enabled or not \n  \n  const [alert, setAlert] = useState(null);\nconst showAlert=(message, type)=>{\n      setAlert({\n        msg:message,\n        type:type  \n      })\n      setTimeout(() => {\n        setAlert(null)\n      }, 1500);\n}\n\n  const toggleMode=()=>{\n    if(mode==='light'){\n    setMode('dark');\n    document.body.style.backgroundColor= \"#04044b\";\n    showAlert(\"Dark mode has been enabled\", \"success\");\n    document.title='TextUtils-dark mode'\n    // setInterval(() => {\n    //   document.title='TextUtils-dark mode'\n    // }, 2000);\n    // setInterval(() => {\n    //   document.title='Install this now'\n    // }, 1500);\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor= \"white\";\n    showAlert(\"Light mode has been enabled\", \"success\");\n    document.title='TextUtils-light mode'\n  }\n  }\n  \n  return (\n<> \n{/* <Navbar title=\"TextUtils\" About=\"AboutUs\" /> */}\n{/* <Navbar  /> */}\n{/* <Router> */}\n\n<Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n\n  {/* <Switch> */}\n    {/* exaxt to match to the exact path */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />\n          {/* </Route> */}\n       {/* </Switch> */}\n\n</div>\n{/* </Router> */}\n </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}